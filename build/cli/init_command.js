const { badgeforcejs } = require('../index');
const { createHash } = require('crypto');
const Ora = require('ora');
const DEFAULT_ENDPOINT = 'http://127.0.0.1:8008';
const STORAGE_KEY = createHash('md5').update('badgeforce-cli').digest('hex');
const init = function (args, callback) {
    const spinner = new Ora({ text: 'Configuring BadgeForce Client', spinner: "arc" }).start();
    this.localStorage(STORAGE_KEY);
    const { privatekey } = args;
    const host = args.options[node] ? args.options[node] : DEFAULT_ENDPOINT;
    const client = new badgeforcejs.Client(host, privatekey);
    this.localStorage.setItem('bf_client', client);
    spinner.succeed();
    callback();
};
module.exports = function (vorpal, options) {
    vorpal
        .command('configure <privatekey>')
        .option('-n, --node <nde>', `URI to BadgeForce blockchain rest API. Default is ${DEFAULT_ENDPOINT}`)
        .types({
        string: ['n', 'node']
    })
        .description(`Configure sets up BadgeForce client 
            with the provided private key and optional host URI. 
            If host URI not specified the default ${DEFAULT_ENDPOINT} will be used.
            You can use this command to switch private keys and host also.`)
        .action(configure);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5pdF9jb21tYW5kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NsaS9pbml0X2NvbW1hbmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxFQUFFLFlBQVksRUFBRSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUM3QyxNQUFNLEVBQUUsVUFBVSxFQUFFLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ3pDLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUUzQixNQUFNLGdCQUFnQixHQUFHLHVCQUF1QixDQUFDO0FBQ2pELE1BQU0sV0FBVyxHQUFHLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7QUFFN0UsTUFBTSxJQUFJLEdBQUcsVUFBVSxJQUFJLEVBQUUsUUFBUTtJQUNqQyxNQUFNLE9BQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxFQUFDLElBQUksRUFBRSwrQkFBK0IsRUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN4RixJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxVQUFVLEVBQUUsR0FBRyxJQUFJLENBQUM7SUFDNUIsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUM7SUFFeEUsTUFBTSxNQUFNLEdBQUcsSUFBSSxZQUFZLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQztJQUN6RCxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDL0MsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ2xCLFFBQVEsRUFBRSxDQUFDO0FBQ2YsQ0FBQyxDQUFBO0FBRUQsTUFBTSxDQUFDLE9BQU8sR0FBRyxVQUFVLE1BQU0sRUFBRSxPQUFPO0lBQ3RDLE1BQU07U0FDRCxPQUFPLENBQUMsd0JBQXdCLENBQUM7U0FDakMsTUFBTSxDQUFDLGtCQUFrQixFQUN0QixxREFBcUQsZ0JBQWdCLEVBQUUsQ0FDMUU7U0FDQSxLQUFLLENBQUM7UUFDSCxNQUFNLEVBQUUsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDO0tBQ3hCLENBQUM7U0FDRCxXQUFXLENBQUM7O29EQUUrQixnQkFBZ0I7MkVBQ08sQ0FDbEU7U0FDQSxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDM0IsQ0FBQyxDQUFBIn0=